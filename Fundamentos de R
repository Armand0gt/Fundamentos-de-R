4+8
20-8
4^2
x <- 86
x
Oficina <- 7
Platzi <- 1
Transporte <- 1.5
Tiempo_al_dia <- Oficina+Platzi+Transporte
Tiempo_al_dia
Ronaldo = 1


Corte_1 <- 0.3
Corte_2 <- 0.3
Corte_3 <-0.4
Nota_1 <- 4
Nota_2 <- 4.6
Nota_3 <- 3
Nota_c_1 <- Nota_1 * Corte_1
Nota_c_1
Nota_c_2 <- Nota_2 * Corte_2
Nota_c_2
Nota_c_3 <- Nota_3 * Corte_3
Nota_c_3

Nota_final <- Nota_c_1+Nota_c_2+Nota_c_3
Nota_final

Nombre = "Juan"
Nombre_2 = "Pedro"

Nombre_completo <- paste0(Nombre," ",Nombre_2)
Nombre_completo

str (mtcars)
class(mtcars$vr)
mtcars = as.logical(mtcars$vs)
mtcars = as.logical(mtcars$am)

str (mtcars)

str (orangeec)


class(orangeec$vr)
orangeec = as.logical(orangeec$vs)
orangeec = as.logical(orangeec$am)

str (orangeec)




summary(orangeec)
summary(mtcars)

wt = (mtcars$wt*1000)/2
wt
mtcars.new <- transform(mtcars,wt=wt*1000/2)
mtcars.new
summary(mtcars.new)


#Vector Numerico

tiempo_platzi <- c(25,5,10,15,10)
tiempo_lecturas <- c(30,10,5,10,15)  
tiempo_aprendizaje <- tiempo_platzi+tiempo_lecturas
tiempo_aprendizaje

#Vector texto
dias_aprendizaje <- c("Lunes","Marte", "Miercoles", "Jueves", "Viernes")
dias_aprendizaje

#Vector Boleano

dias_mas_20min = c(TRUE, FALSE,FALSE, TRUE, TRUE)

dias_mas_20min


total_tiempo_platzi = sum(tiempo_platzi)
total_tiempo_platzi

total_tiempo_lecturas = sum(tiempo_lecturas)
total_tiempo_lecturas

total_tiempo_adicional = total_tiempo_platzi+total_tiempo_lecturas
total_tiempo_adicional


#usodematriz= Mismos tipos de datos = matriz
#Dataframe = tipo de datos distintos


#Matriz
tiempo_matrix = matrix(c(tiempo_platzi,tiempo_lecturas), nrow = 2, byrow = TRUE)

dias = c("Lunes","Marte", "Miercoles", "Jueves", "Viernes")
                        
tiempo = c("tiempo platzi", "tiempo lecturas")

colnames(tiempo_matrix) = dias
rownames(tiempo_matrix) = tiempo
tiempo_matrix

colSums(tiempo_matrix)
rowsum(tiempo_matrix)

final_matrix = rbind(tiempo_matrix,c(10,15,30,5,0))
final_matrix

colSums(final_matrix)

final_matrix[1,5]
final_matrix

#Operadores para comparar y ubicar datos

mtcars[mtcars$cyl<6,] #Buscar en mtcars y ver cuales tiene carros menorse a 6 cilindros

orangeec[orangeec$GDP.PC>= 15000,] #GDP.PC para ver el pib percapita 
orangeec[orangeec$Creat.Ind...GDP<= 2,] 

neworangeec = subset(orangeec, Internet.penetration...population > 80
                     & Education.invest...GDP >= 4.5)  #PARA DOS VARIABLES A BUSCAR

neworangeec

#PARA DOS VARIABLES A BUSCAR

neworangeec = subset(orangeec, Internet.penetration...population > 80
                     & Education.invest...GDP >= 4.5, 
                     Select = Creat.ind...GDP)

neworangeec

#cAMBIARNOMBRE A UNA VARIABLE LIBRERIA plyr


rename(orangeec,c("Creat.Ind...GDP" = "AporteEcBNja"))


#Factores, listas y echar un vistaso al dataset

Nivel_Curso = c("Basico", "Intermedio","Avanzado")
Nivel_Curso

head (mtcars)
head(orangeec)

tail(mtcars)
tail(orangeec)


glimpse(orangeec)

my_vector = 1:8
my_vector
my_matrix = matrix(1:9, ncol= 3)
my_matrix
my_df = mtcars[1:4,]
my_df


my_list = list(my_vector,my_matrix,my_df)
my_list


#Qué es EDA: Exploratory Data Analysis visualizar datos antes de enforcarse en las formulas
#Cuarteto some, antes analizar las estadisticas visualizar los datos para ver su distribucion 

#Scatterplot: cruzamos variables continuos o numericas, no se puede tener variables categoricas los puntos no los podemos unir
#(X,Y) Y=variable dependiente, x= independiente


#Hisograma: para ver la distribucion de las frecuencias de una variable.
#barras ban pegadas, orden desendente de menor a mayor en el eje x. y nos presenta lo que hay y no hay.


#Grafica: se grafica solo lo que hay. se pueden convertir los numeros en etiquetas

#Grafica de box plot: nos muestra 5 elementos de la estadistica descriptiva.
  #*Minimo, maximo, el primer cuartil, la mediana (segundo cuartil), y el tercer cuartil.
  #*



#EDA Scatter plot mtcars <- 

plot(mtcars$mpg~mtcars$cyl,
  xlab= "cilindros", ylab = "millas por galon",
  main = "Relacion cilindros y millas por galon")


plot(mtcars$mpg~mtcars$hp,
     xlab= "caballos de fuerza", ylab = "millas por galon",
     main = "Relacion caballos de fuera y millas por galon")


#EDA Scatter plot orangeec <- 

plot(orangeec$Unemployment~orangeec$Education.invest...GDP,
     xlab= "Empleos", ylab = "cidudad",
     main= "Relacion entre empleos por ciudad")

plot(orangeec$GDP.PC~orangeec$Creat.Ind...GDP,
     xlab= "Aporte economia naranja al PIB(%)", ylab = "PIB percapita",
     main= "Relacion economia naranja y pib per capita")

#HISTOGRAMA
qplot(mtcars$hp,
      geom= "histogram",
      xlab ="Caballos de fuerza",
      main= "Carros segun caballos de fuerza")
  

ggplot(mtcars,aes(x=hp))+
  geom_histogram()+
  labs (x="Caballos de fuerza", y="cantidad de carros",
      title="Caballos de fuerza en carros seleccionados")+
  theme (legend.position = "none")+
  theme (panel.background = element_blank(), panel.grid = element_blank(),
         panel.grid.minor = element_blank())


#Ajustar el ancho de la barra, completo

ggplot(mtcars,aes(x=hp))+
  geom_histogram(binwidth =  30)+
  labs (x="Caballos de fuerza", y="cantidad de carros",
        title="Caballos de fuerza en carros seleccionados")+
  theme (legend.position = "none")+
  theme (panel.background = element_blank(), panel.grid = element_blank(),
         panel.grid.minor = element_blank())

#Lo mismo pero de otra forma. Hist mtcars
ggplot()+geom_histogram(data=mtcars,
                        aes(x=hp), fill="red", color="green",
                        binwidth = 20)+ labs (x="Caballos de fuerza", y="cantidad de carros",
                           title="Caballos de fuerza en carros seleccionados")+
  theme (legend.position = "none")+
  xlim (c(80,280))+ theme (legend.position = "none")+
  theme (panel.background = element_blank(), panel.grid = element_blank(),
         panel.grid.minor = element_blank())



#hist orangeec

ggplot()+geom_histogram(data=orangeec,
                        aes(x=GDP.PC), fill="red", color="green",
                        binwidth = 2000)+ 
  labs (x="PIB per capita", y="cantidad de paices",
    title="PIB percapita en paices LATAM")+
  theme (legend.position = "none")+
theme (panel.background = element_blank(), panel.grid = element_blank(),
         panel.grid.minor = element_blank())


#aporte economia naranja
ggplot()+geom_histogram(data=orangeec,
                        aes(x=Creat.Ind...GDP), fill="red", color="green",
                        binwidth = 1)+ 
  labs (x="Aporte economia naranja al PIB (%)", y="Contribucion a economia naranja al PIB",
        title="PIB percapita en paices LATAM")+
  theme (legend.position = "none")+
  theme (panel.background = element_blank(), panel.grid = element_blank(),
         panel.grid.minor = element_blank())
#Distribucion de frecuencia de internet

ggplot()+geom_histogram(data=orangeec,
                        aes(x=Internet.penetration...population), fill="yellow", color="green",
                        binwidth = 5)+ 
  labs (x="Penetracion internet (%) poblacion", y="Penetracion de internet en paices LATAM",
        title="PIB percapita en paices LATAM")+
  theme (legend.position = "none")+
  theme (panel.background = element_blank(), panel.grid = element_blank(),
         panel.grid.minor = element_blank())

#boxplot

boxplot (mtcars$hp,
         ylab="caballos de fuerza",
         main= "Caballos de fuerza en carros mtcars")

ggplot(mtcars,aes(x=as.factor(cyl),y=hp,fill=cyl))+
  geom_boxplot(alpha=0.6)+
  labs(x="cilindros", y="Caballos de fuerza",
       title="caballos de fuerza segun cilindros en mtcars")+
  theme (legend.position = "none")+
  theme (panel.background = element_blank(), 
         panel.grid = element_blank(),
         panel.grid.minor = element_blank())


#

ggplot(mtcars,aes(x=am, y=mpg, fill=am))+
  geom_boxplot()+
  labs(x="tipo de caja", y="millas por galon",
       title="Millas por galon segun tipo de caja-mtcars")+
  theme (legend.position = "none")+
  theme(panel.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())

mtcars$am <- factor(mtcars$am, levels=c(TRUE,FALSE),
                    labels=c("Manual","Automático"))


#Boxplot orangeec

#Clasificacion de paises en base a un promedio de pi per capita

economy = mean(orangeec$GDP.PC)
economy

#Agregar una nueva columna con una variable categorica
orangeec <- orangeec %>%
  mutate(Stron_economy = ifelse(GDP.PC < economy,
                                "por debajo prodmedio pib per capita",
                                "por arriba promedio pib per capita"))


ggplot(orangeec, aes(x=Stron_economy, y= Creat.Ind...GDP,
                     fill =Stron_economy))+
  geom_boxplot(alpha=0.4)+
  labs(x="tipo de pais", y="Aporte economia naranja al pib",
      title="Aporte economia naranja en pib paises latam con alto y bajo pib per capita")+
  theme (legend.position = "none")+
  theme(panel.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())
 


#Internet
ggplot(orangeec, aes(x=Stron_economy, y= Internet.penetration...population,
                     fill =Stron_economy))+
  geom_boxplot(alpha=0.4)+
  labs(x="tipo de pais", y="Penetracion de internet (%)",
       title="Penetracion de internet en paises latam con alto y bajo pib per capita")+
  theme (legend.position = "none")+
  theme(panel.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())

#EDA con gráficas de dispersión con más de dos variables - ggplot2

ggplot(mtcars,aes(hp, mpg))+
  geom_point()+
  labs(x="Caballos fuerza", y="millas por galon",
       title = "relacion caballos fuerza y  millas por galon")+
  theme (legend.position = "none")+
  theme(panel.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())
  

#Peso y potencia

ggplot(mtcars,aes(wt, hp))+
  geom_point()+
  labs(x="Peso", y="Potencia",
       title = "relacion Peso potencia")+
  theme (legend.position = "none")+
  theme(panel.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())


#relacionar 4 varioables en el mismo scater plot
ggplot(mtcars, aes(hp,qsec))+
  geom_point(aes(color=gear, size=cyl))+
  labs(s="caballos de fuerza", y="tiempo en 1/4 milla",
       title="caballos-velocidad segun cilindrage y tipo de caja")


#orangeec: 
#EDA con dataset proyecto usando gráficas de dispersión con más 
#de dos variables - ggplot2 - plotly

ggplot(orangeec, aes(Internet.penetration...population,Creat.Ind...GDP))+
  geom_point(aes(color=factor(Stron_economy), size=GDP.Growth..))+
  labs(s="Penetracion internet", y="Aporte economia naranja al PIB",
       title="Internet y aporte economia naranja segun economia y crecimiento pib")


#para que al pasar el mouse se puedan ver los datos
my_graph = ggplot(orangeec, aes(Internet.penetration...population,
                                Creat.Ind...GDP,label=row.names(orangeec)))+
  geom_point()+
  labs(x="Penetracion internet", y="Aporte economia naranja",
       title = "Penetracion internet y aporte economia naranja")

my_graph
p= ggplotly(my_graph)
p


#Buscando correlaciones con pairs Clase 23 / 35


pairs(mtcars[,2:6]) #, significa todas las columnas
pairs(mtcars) #esta es de todos


#
newdata = subset(mtcars, select=c(2,7:8,11,12))

pairs(newdata)

#
pairs(mtcars[,-c(1,3,4,5,6,9,10)])
#escaoger observaciones con filas 

eficientes = filter(mtcars, mpg >= 30)
eficientes

#relacion de variables solo con los carros con mayor a 

pairs(eficientes[,2:6])

#Seleccion por modelos o marca (stringr)
merc = mtcars %>%
  filter(str_detect(model, "Merc"))
merc


#P
pairs(merc[,2:6])


#Confirmando correlaciones con la función corClase 24 / 35. Solo hay 
#Remplazar el pairs 

cor(merc[,2:6])
cor(newdata)
cor(merc[,2:6])

#Buscando correlaciones con pairs en dataset proyectoClase 25 / 35


#mi
pairs(orangeec[,2:6])

pairs(orangeec[,5:10])

#
newdata = subset (orangeec, select = c(5,6,10,11,12,13))
newdata

pairs(newdata)

#Confirmando correlaciones con la función cor en dataset proyecto.Clase 26 / 35

cor(orangeec[,2:6])
#soluciionar cuando hay NA y que muestre solo los que estan completos.

cor(orangeec[,2:6], use= "complete.obs")

#
cor(orangeec[,5:10])

cor(orangeec[,5:10], use= "complete.obs")

cor(newdata, use="complete.obs")



#Protegiéndonos de los peligros del promedio.Clase 27 / 35
#Desviacion estandar

#Las medidas de tendencia central (promedio, mediana y moda) y las medidas de dispersión (rango, varianza y desviación estándar) nos ayudan a describir una distribución de frecuencias. Las medidas principales son:
#Media: Calculada como la suma de todos los valores dividida entre el conteo de valores.
#Desviación estándar: Expresa la desviación que tienen los valores de una variable respecto a su media.
#Coeficiente de variación: Nos ayuda a medir qué tan desviados están los datos respecto al promedio. Se calcula dividiendo la desviación estándar entre la media. Los valores óptimos están entre 0 y 0.25.
#En algunas ocasiones la media no es la mejor medida de tendencia central para describir una distribución y podemos utilizar la moda (el valor más frecuente) o la mediana (divide los datos en dos mitades). Debemos graficar la distribución para elegir la mejor medida.
#En algunas ocasiones la media no es la mejor medida de tendencia central para describir una distribución y podemos utilizar la moda (el valor más frecuente) o la mediana (divide los datos en dos mitades). Debemos graficar la distribución para elegir la mejor medida.




sd(mtcars$mpg)
desv = sd(mtcars$mpg)
mean(mtcars$mpg)
#
prom = mean(mtcars$mpg)
prom

coefVar = (desv/prom)*100
coefVar


#Ver que tan desviados estan nuestros datos
#Eliminando los NA's para hacer los cálculos.Clase 28 / 35


sd(orangeec$Internet.penetration...population)
desv = sd(orangeec$Internet.penetration...population)
desv


mean(orangeec$Internet.penetration...population)
prom = mean(orangeec$Internet.penetration...population)
prom
coefVar = (desv/prom)*100
coefVar


summary(orangeec)

#aporte de la economia naranja
summary(orangeec)

#Remover NA

mean(orangeec$Creat.Ind...GDP)
mean(orangeec$Creat.Ind...GDP,na.rm=TRUE)
prom = mean(orangeec$Creat.Ind...GDP, na.rm = TRUE)
#
sd(orangeec$Creat.Ind...GDP)
sd(orangeec$Creat.Ind...GDP,na.rm=TRUE)
desv = mean(orangeec$Creat.Ind...GDP, na.rm = TRUE)


#
coefVar = (desv/prom)*100
coefVar


#Estadística y visualización aplicada a análisis de datos de mercadeo.Clase 29 / 35


#Generando tablas, filtrando y seleccionando datos - dplyr-Parte 1Clase 30 / 35

#Ajusntado datos para mejorar visualizaciones

eficientes = mean(mtcars$mpg)
eficientes
mtcars = mtcars %>% 
  mutate(Mas_eficientes = ifelse(mpg < eficientes,
                                 "bajo promedio",
                                 "en o sobre promedio"))


Mas_veloces = mtcars[mtcars$qsec<16,]                           
Mas_veloces                                 
mtcars = mtcars %>%
  mutate(Velocidad_Cuarto_milla = ifelse(qsec<16,
                                         "Menos 16 segundos",
                                         "Mas 16 segundos"))
                                 

#
mtcars = mtcars%>%
mutate(Peso_kilos =(wt/2)*1000)
mtcars = mtcars %>%
mutate(Peso=ifelse(Peso_kilos<1500,
                   "Livianos", "Pesados"))



#Generando tablas, filtrando y seleccionando datos - dplyr-Parte 2Clase 31 / 35
#Economia naranja



orangeec = orangeec %>%
  mutate(Crecimiento_GDP = ifelse (GDP.Growth..>= 2.5,
                                   "2.5% O mas", "Menos 2.5%" ))

#
orangeec = orangeec %>%
  mutate(Anaranjados=ifelse(Creat.Ind...GDP >= 2.5,
                            "Mas anaranjados", "Menos Anaranjados"))

#Rankin de los paices que mas pib tiene

orangeec %>%
  arrange(desc(Creat.Ind...GDP))



TopNaranjas = orangeec %>%
  filter(Country %in% c("Mexico", "Panama", "Argentina",
                       "Colombia", "Brazil"))
TopNaranjas

#Ordenar en orden desendente

TopNaranjas %>%
  arrange(desc(Creat.Ind...GDP))



#Viendo más información con facet wrap - Parte 1Clase 32 / 35

mtcars %>%
  arrange(desc(Peso_kilos))

Mas_pesados = mtcars %>%
  filter(model %in% c("Lincoln Continental", "Chrysler Imperial", "Cadillac Fleetwood", "Merc 450SE"))

Mas_pesados

#


ggplot(Mas_pesados, aes(x=hp, y=mpg))+
  geom_point()+
  facet_wrap(~model) #para hacer un cuadrante



ggplot(mtcars, aes(x=cyl, y=mpg, size=Peso))+
  geom_point()+
  facet_wrap(~am)

#Viendo más información con facet wrap - Parte 2Clase 33 / 35
#Paices que mas aportan en la economia naranja 

TopNaranjas = orangeec %>%
  filter(Country %in% c("Mexico", "Panama", "Argentina",
                        "Colombia", "Brazil", "Paraguay"))
TopNaranjas

#

ggplot(TopNaranjas, aes(x=Internet.penetration...population,
                        y=Services...GDP,
                        size=GDP.PC))+
  geom_point() +
  facet_wrap(~Country)
  
#
ggplot(TopNaranjas, aes(x=Education.invest...GDP,
                        y=Creat.Ind...GDP,
                        size=Unemployment))+
  geom_point() +
  facet_wrap(~Country)



# Colocarle color

myColors = brewer.pal(9,"Reds")

ggplot(TopNaranjas, aes(x=Internet.penetration...population,
                        y=GDP.PC, fill = Creat.Ind...GDP))+
  geom_tile()+
  facet_wrap(~Country)+
  scale_fill_gradientn(colors=myColors)

#Conociendo R Markdown y organizando los hallazgos del análisis en un documento PDF.Clase 34 / 35


#Instalar el paquete de rmarkdown
#Instalar el paquete : knitr
#Salir del ambiente de trabajao y  buscar R Markdown
